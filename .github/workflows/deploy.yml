name: Deploy Flask App to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 850995576645.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and Tag Docker Image (Ensuring Correct Architecture)
        run: |
          docker build --platform=linux/amd64 -t flask-app:latest .  
          docker tag flask-app:latest 850995576645.dkr.ecr.us-east-1.amazonaws.com/flask-app:latest

      - name: Push Docker Image to Amazon ECR
        run: |
          docker push 850995576645.dkr.ecr.us-east-1.amazonaws.com/flask-app:latest

      - name: Ensure ECS Uses Latest Task Definition
        run: |
          aws ecs update-service --cluster flask-cluster --service new-service --force-new-deployment

      - name: Run Database Migrations as an ECS Task
        run: |
          TASK_ARN=$(aws ecs run-task --cluster flask-cluster \
            --launch-type FARGATE \
            --task-definition flask-with-db \
            --network-configuration "awsvpcConfiguration={subnets=[\"subnet-0ed6008bb5c2acba3\"],securityGroups=[\"sg-0a7c80c97975f56ad\"],assignPublicIp=\"ENABLED\"}" \
            --overrides '{
                "containerOverrides": [
                  {
                    "name": "flask-container",
                    "command": ["flask", "db", "upgrade"]
                  }
                ]
            }' --query "tasks[0].taskArn" --output text)

          echo "Waiting for migration task to complete..."
          aws ecs wait tasks-stopped --cluster flask-cluster --tasks $TASK_ARN

          echo "Checking migration task logs..."
          aws logs get-log-events --log-group-name "/ecs/flask-with-db" --log-stream-name "ecs/flask-container"

      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster flask-cluster --service new-service --force-new-deployment
